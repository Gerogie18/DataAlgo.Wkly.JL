package week01;

//test script generated by AI

public class Test {

    public static void main(String[] args) {
        testTempValidTemperature();
        testTempInvalidTemperatureTooCold();
        testTempInvalidTemperatureTooHot();
        testTempInvalidNumberFormat();
        testTempAnalysisAverageTemperature();
        testTempAnalysisAboveAverageTemperatures();
        testTempAnalysisToString();
        testTempAnalysisUpdateTemps();
        testTempAnalysisEmptyArray();
        testTempAnalysisNullArray();
    }

    public static void testTempValidTemperature() {
        Temp temp = new Temp("20");
        System.out.println("Test Temp Valid Temperature: " + (temp.getTemperature() == 20.0 ? "Passed" : "Failed"));
    }

    public static void testTempInvalidTemperatureTooCold() {
        try {
            new Temp("-100");
            System.out.println("Test Temp Invalid Temperature Too Cold: Failed");
        } catch (IllegalArgumentException e) {
            System.out.println("Test Temp Invalid Temperature Too Cold: Passed");
        }
    }

    public static void testTempInvalidTemperatureTooHot() {
        try {
            new Temp("100");
            System.out.println("Test Temp Invalid Temperature Too Hot: Failed");
        } catch (IllegalArgumentException e) {
            System.out.println("Test Temp Invalid Temperature Too Hot: Passed");
        }
    }

    public static void testTempInvalidNumberFormat() {
        try {
            new Temp("abc");
            System.out.println("Test Temp Invalid Number Format: Failed");
        } catch (IllegalArgumentException e) {
            System.out.println("Test Temp Invalid Number Format: Passed");
        }
    }

    public static void testTempAnalysisAverageTemperature() {
        Temp[] temps = new Temp[] {new Temp("20"), new Temp("30"), new Temp("40")};
        TempAnalysis analysis = new TempAnalysis(temps);
        System.out.println("Test Temp Analysis Average Temperature: " + (Math.abs(analysis.getAverage() - 30.0) < 0.01 ? "Passed" : "Failed"));
    }

    public static void testTempAnalysisAboveAverageTemperatures() {
        Temp[] temps = new Temp[] {new Temp("20"), new Temp("30"), new Temp("40")};
        TempAnalysis analysis = new TempAnalysis(temps);
        Temp[] aboveAverage = analysis.getAboveAverage();
        System.out.println("Test Temp Analysis Above Average Temperatures: " + (aboveAverage.length == 1 && Math.abs(aboveAverage[0].getTemperature() - 40.0) < 0.01 ? "Passed" : "Failed"));
    }

    public static void testTempAnalysisToString() {
        Temp[] temps = new Temp[] {new Temp("20"), new Temp("30"), new Temp("40")};
        TempAnalysis analysis = new TempAnalysis(temps);
        String expected = "Temperature Analysis:\n-------------------\nTemperatures: 20.00°C 30.00°C 40.00°C \nAverage: 30.00°C\nAbove Average: 40.00°C ";
        System.out.println("Test Temp Analysis To String: " + (analysis.toString().equals(expected) ? "Passed" : "Failed"));
    }

    public static void testTempAnalysisUpdateTemps() {
        Temp[] temps = new Temp[] {new Temp("20"), new Temp("30"), new Temp("40")};
        TempAnalysis analysis = new TempAnalysis(temps);
        Temp[] newTemps = new Temp[] {new Temp("10"), new Temp("20"), new Temp("30")};
        analysis.updateTemps(newTemps);
        System.out.println("Test Temp Analysis Update Temps: " + (Math.abs(analysis.getAverage() - 20.0) < 0.01 ? "Passed" : "Failed"));
    }

    public static void testTempAnalysisEmptyArray() {
        try {
            new TempAnalysis(new Temp[0]);
            System.out.println("Test Temp Analysis Empty Array: Failed");
        } catch (IllegalArgumentException e) {
            System.out.println("Test Temp Analysis Empty Array: Passed");
        }
    }

    public static void testTempAnalysisNullArray() {
        try {
            new TempAnalysis(null);
            System.out.println("Test Temp Analysis Null Array: Failed");
        } catch (IllegalArgumentException e) {
            System.out.println("Test Temp Analysis Null Array: Passed");
        }
    }
}